https://blogs.oracle.com/alejandrovargas/check-io-scripts

https://blogs.oracle.com/alejandrovargas/useful-scripts

https://community.toadworld.com/platforms/oracle/b/weblog/archive/2013/05/20/sql-scripts-for-runtime-and-iop-s

https://flashdba.com/2014/02/26/oracle-awr-reports-understanding-io-statistics/

https://srivenukadiyala.wordpress.com/2011/02/18/calculate-iops-for-a-database-instance/

http://kerryosborne.oracle-guy.com/2009/10/how-to-attach-a-sql-profile-to-a-different-statement-take-2/

set lines 250 pages 50000
alter session set nls_date_format='dd-mm-yyyy hh24:mi';
col Phys_Read_Total_Bps for 999999999999
col Phys_Write_Total_Bps for 999999999999
col Redo_Bytes_per_sec for 999999999999
col Phys_Read_IOPS for 999999999999
col Phys_write_IOPS for 999999999999
col Phys_redo_IOPS for 999999999999
col OS_LOad for 999999999999
col DB_CPU_Usage_per_sec for 999999999999
col Host_CPU_util for 999999999999
col Network_bytes_per_sec for 999999999999
col Phys_IO_Tot_MBps for 999999999999
col Phys_IOPS_Tot for 999999999999
spool io_max_checkup.log
select min(begin_time), max(end_time),
 sum(case metric_name when 'Physical Read Total Bytes Per Sec' then maxval end) Phys_Read_Tot_Bps,
 sum(case metric_name when 'Physical Write Total Bytes Per Sec' then maxval end) Phys_Write_Tot_Bps,
 sum(case metric_name when 'Redo Generated Per Sec' then maxval end) Redo_Bytes_per_sec,
 sum(case metric_name when 'Physical Read Total IO Requests Per Sec' then maxval end) Phys_Read_IOPS,
 sum(case metric_name when 'Physical Write Total IO Requests Per Sec' then maxval end) Phys_write_IOPS,
 sum(case metric_name when 'Redo Writes Per Sec' then maxval end) Phys_redo_IOPS,
 sum(case metric_name when 'Current OS Load' then maxval end) OS_LOad,
 sum(case metric_name when 'CPU Usage Per Sec' then maxval end) DB_CPU_Usage_per_sec,
 sum(case metric_name when 'Host CPU Utilization (%)' then maxval end) Host_CPU_util, --NOTE 100% = 1 loaded RAC node
 sum(case metric_name when 'Network Traffic Volume Per Sec' then maxval end) Network_bytes_per_sec,
 snap_id
from dba_hist_sysmetric_summary
group by snap_id
order by snap_id;
spool off
spool io_maxtot_summary.log
select min(begin_time), max(end_time),
 sum(case metric_name when 'Physical Read Total Bytes Per Sec' then maxval end)/1024/1024 +
 sum(case metric_name when 'Physical Write Total Bytes Per Sec' then maxval end)/1024/1024 +
 sum(case metric_name when 'Redo Generated Per Sec' then maxval end)/1024/1024 Phys_IO_Tot_MBps,
 sum(case metric_name when 'Physical Read Total IO Requests Per Sec' then maxval end) +
 sum(case metric_name when 'Physical Write Total IO Requests Per Sec' then maxval end) +
 sum(case metric_name when 'Redo Writes Per Sec' then maxval end) Phys_IOPS_Tot,
 sum(case metric_name when 'Current OS Load' then maxval end) OS_LOad,
 sum(case metric_name when 'CPU Usage Per Sec' then maxval end) DB_CPU_Usage_per_sec,
 sum(case metric_name when 'Host CPU Utilization (%)' then maxval end) Host_CPU_util, --NOTE 100% = 1 loaded RAC node
 sum(case metric_name when 'Network Traffic Volume Per Sec' then maxval end) Network_bytes_per_sec,
 snap_id
from dba_hist_sysmetric_summary
group by snap_id
order by snap_id;
spool off



- Script to determine how much IO

SELECT a.sid,
 a.statistic#,
 SUBSTR(b.name,1,40) name,
 a.value
 FROM v$sesstat a,
 v$statname b,
 v$session se
 WHERE se.audsid = (select userenv('sessionid') from dual)
 AND a.statistic# = b.statistic#
 AND se.sid = a.sid
 AND b.name in ('physical read total IO requests','physical read total bytes','physical write total IO requests','physical write total bytes')
 ORDER BY b.class, b.name;

 
 
 set lines 250
set pages 9999
spool sysmetric_outp.log
alter session set nls_date_format='dd-mm-yyyy hh24:mi';
select min(begin_time), max(end_time),
       sum(case metric_name when 'Physical Read Total Bytes Per Sec' then average end) Physical_Read_Total_Bps,
       sum(case metric_name when 'Physical Write Total Bytes Per Sec' then average end) Physical_Write_Total_Bps,
       sum(case metric_name when 'Redo Generated Per Sec' then average end) Redo_Bytes_per_sec,
       sum(case metric_name when 'Physical Read Total IO Requests Per Sec' then average end) Physical_Read_IOPS,
       sum(case metric_name when 'Physical Write Total IO Requests Per Sec' then average end) Physical_write_IOPS,
       sum(case metric_name when 'Redo Writes Per Sec' then average end) Physical_redo_IOPS,
       sum(case metric_name when 'Current OS Load' then average end) OS_LOad,
       sum(case metric_name when 'CPU Usage Per Sec' then average end) DB_CPU_Usage_per_sec, 
       sum(case metric_name when 'Host CPU Utilization (%)' then average end) Host_CPU_util, --NOTE 100% = 1 loaded RAC node 
       sum(case metric_name when 'Network Traffic Volume Per Sec' then average end) Network_bytes_per_sec, 
       snap_id
from dba_hist_sysmetric_summary
group by snap_id
order by snap_id;
spool off 



ALTER SESSION SET NLS_DATE_FORMAT='DD-MON-YY HH24:MI:SS';
 break on report
 compute sum of value on report
 select METRIC_NAME,avg(AVERAGE) value from dba_hist_sysmetric_summary
 where begin_time between to_date('24-MAY-18 00:00:00', 'dd-MON-yy hh24:mi:ss') and to_date('24-MAY-18 23:59:59', 'dd-MON-yy hh24:mi:ss')
 and end_time like '%24-MAY-18%' and  METRIC_NAME in ('Physical Read Total IO Requests Per Sec','Physical Write Total IO Requests Per Sec')
 group by METRIC_NAME;
 
 
 define  name='physical read total IO requests'
define inst_no=1
define slotsize=900
define rangesize=500
define start_peak_hour=8
define end_peak_hour=15

col range head "   IOPS Range" form a20
col noofslots head "No Of|Occurences" form 999,999


select	lpad(trunc(vpersec/&rangesize) * &rangesize, 6) ||' - '||
	lpad(((trunc(vpersec/&rangesize) + 1) * &rangesize) - 1, 6) range,
	sum(noofslots) noofslots
from	(
	select	st/(extract(DAY from (dest - dsst)) * 86400 + extract(HOUR from (dest - dsst)) * 3600+ 
		extract(MINUTE from (dest - dsst)) * 60+ extract(SECOND from (dest - dsst))) vpersec,
		round((extract(DAY from (dest - dsst)) * 86400 + extract(HOUR from (dest - dsst)) * 3600+ 
		extract(MINUTE from (dest - dsst)) * 60+ extract(SECOND from (dest - dsst)))/&slotsize) noofslots 
	from	(
		select 	/*+ full(st) full(ss) use_hash(st)*/
			to_char(ss.BEGIN_INTERVAL_TIME,'DAY DD-MM-YYYY HH24:MI:SS') est, 
			lag(to_char(ss.BEGIN_INTERVAL_TIME,'DAY DD-MM-YYYY HH24:MI:SS')) 
			over(order by ss.snap_id) sst,
			ss.BEGIN_INTERVAL_TIME dest,
			lag(ss.BEGIN_INTERVAL_TIME) over(order by ss.snap_id) dsst,
			st.value-lag(st.value,1,0) over(order by ss.snap_id) st
		from 	sys.WRH$_SYSSTAT 	st,
			sys.WRM$_SNAPSHOT 	ss
		where 	st.snap_id=ss.snap_id
		and	ss.INSTANCE_NUMBER = &inst_no
		and	st.INSTANCE_NUMBER = &inst_no
		and	ss.dbid=st.dbid
		and	st.stat_id in (
			select	stat_id
			from	v$statname
			where	upper(name)=upper(trim('&name'))
			)
		and 	ss.snap_id in (
			select 	/*+push_subq*/
				snap_id
			from 	sys.WRM$_SNAPSHOT 
			where	INSTANCE_NUMBER = &inst_no
			and	to_char(BEGIN_INTERVAL_TIME, 'HH24') between &start_peak_hour and &end_peak_hour
	   		) 
		)
	where   sst is not null
	and	st > 0
	and	to_char(to_date(sst, 'DAY DD-MM-YYYY HH24:MI:SS'),'dd-mon-yy') 
		= to_char(to_date(est, 'DAY DD-MM-YYYY HH24:MI:SS'),'dd-mon-yy')
	)
group	by lpad(trunc(vpersec/&rangesize) * &rangesize, 6) ||' - '||
	lpad(((trunc(vpersec/&rangesize) + 1) * &rangesize) - 1, 6)
order	by lpad(trunc(vpersec/&rangesize) * &rangesize, 6) ||' - '||
	lpad(((trunc(vpersec/&rangesize) + 1) * &rangesize) - 1, 6)
/
